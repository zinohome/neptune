{
    "Schema":"mysqlsrc",
    "Tables":{
        "customers":{
            "Name":"customers",
            "Type":"table",
            "PrimaryKeys":[
                "customerNumber"
            ],
            "Indexes":[
                {
                    "name":"salesRepEmployeeNumber",
                    "column_names":[
                        "salesRepEmployeeNumber"
                    ],
                    "unique":false
                }
            ],
            "Columns":[
                {
                    "name":"customerNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                },
                {
                    "name":"customerName",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"contactLastName",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"contactFirstName",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"phone",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"addressLine1",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"addressLine2",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"city",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"state",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"postalCode",
                    "type":"VARCHAR(15)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"country",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"salesRepEmployeeNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True",
                    "autoincrement":"False"
                },
                {
                    "name":"creditLimit",
                    "type":"DECIMAL(10, 2)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(customers.customerNumber, customers.customerName, customers.contactLastName, customers.contactFirstName, customers.phone, customers.addressLine1, customers.addressLine2, customers.city, customers.state, customers.postalCode, customers.country, customers.salesRepEmployeeNumber, customers.creditLimit)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(customers.customerNumber, customers.customerName, customers.contactLastName, customers.contactFirstName, customers.phone, customers.addressLine1, customers.addressLine2, customers.city, customers.state, customers.postalCode, customers.country, customers.salesRepEmployeeNumber, customers.creditLimit)",
                "comment":null,
                "constraints":"{ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac13e00>, None, name='customers_ibfk_1', link_to_name=True, table=Table('customers', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('customerNumber', INTEGER(display_width=11), table=<customers>, primary_key=True, nullable=False), Column('customerName', VARCHAR(length=50), table=<customers>, nullable=False), Column('contactLastName', VARCHAR(length=50), table=<customers>, nullable=False), Column('contactFirstName', VARCHAR(length=50), table=<customers>, nullable=False), Column('phone', VARCHAR(length=50), table=<customers>, nullable=False), Column('addressLine1', VARCHAR(length=50), table=<customers>, nullable=False), Column('addressLine2', VARCHAR(length=50), table=<customers>), Column('city', VARCHAR(length=50), table=<customers>, nullable=False), Column('state', VARCHAR(length=50), table=<customers>), Column('postalCode', VARCHAR(length=15), table=<customers>), Column('country', VARCHAR(length=50), table=<customers>, nullable=False), Column('salesRepEmployeeNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.employees.employeeNumber'), table=<customers>), Column('creditLimit', DECIMAL(precision=10, scale=2), table=<customers>), schema='mysqlsrc')), PrimaryKeyConstraint(Column('customerNumber', INTEGER(display_width=11), table=<customers>, primary_key=True, nullable=False))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac2e1c0>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac2e250>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11abf7440>",
                "foreign_keys":"{ForeignKey('mysqlsrc.employees.employeeNumber')}",
                "fullname":"mysqlsrc.customers",
                "implicit_returning":true,
                "indexes":"{Index('salesRepEmployeeNumber', Column('salesRepEmployeeNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.employees.employeeNumber'), table=<customers>))}",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"customers",
                "primary_key":"PrimaryKeyConstraint(Column('customerNumber', INTEGER(display_width=11), table=<customers>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "employees":{
            "Name":"employees",
            "Type":"table",
            "PrimaryKeys":[
                "employeeNumber"
            ],
            "Indexes":[
                {
                    "name":"reportsTo",
                    "column_names":[
                        "reportsTo"
                    ],
                    "unique":false
                },
                {
                    "name":"officeCode",
                    "column_names":[
                        "officeCode"
                    ],
                    "unique":false
                }
            ],
            "Columns":[
                {
                    "name":"employeeNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                },
                {
                    "name":"lastName",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"firstName",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"extension",
                    "type":"VARCHAR(10)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"email",
                    "type":"VARCHAR(100)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"officeCode",
                    "type":"VARCHAR(10)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"reportsTo",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True",
                    "autoincrement":"False"
                },
                {
                    "name":"jobTitle",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(employees.employeeNumber, employees.lastName, employees.firstName, employees.extension, employees.email, employees.officeCode, employees.reportsTo, employees.jobTitle)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(employees.employeeNumber, employees.lastName, employees.firstName, employees.extension, employees.email, employees.officeCode, employees.reportsTo, employees.jobTitle)",
                "comment":null,
                "constraints":"{ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac1dc20>, None, name='employees_ibfk_1', link_to_name=True, table=Table('employees', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('employeeNumber', INTEGER(display_width=11), table=<employees>, primary_key=True, nullable=False), Column('lastName', VARCHAR(length=50), table=<employees>, nullable=False), Column('firstName', VARCHAR(length=50), table=<employees>, nullable=False), Column('extension', VARCHAR(length=10), table=<employees>, nullable=False), Column('email', VARCHAR(length=100), table=<employees>, nullable=False), Column('officeCode', VARCHAR(length=10), ForeignKey('mysqlsrc.offices.officeCode'), table=<employees>, nullable=False), Column('reportsTo', INTEGER(display_width=11), ForeignKey('mysqlsrc.employees.employeeNumber'), table=<employees>), Column('jobTitle', VARCHAR(length=50), table=<employees>, nullable=False), schema='mysqlsrc')), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac1d2c0>, None, name='employees_ibfk_2', link_to_name=True, table=Table('employees', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('employeeNumber', INTEGER(display_width=11), table=<employees>, primary_key=True, nullable=False), Column('lastName', VARCHAR(length=50), table=<employees>, nullable=False), Column('firstName', VARCHAR(length=50), table=<employees>, nullable=False), Column('extension', VARCHAR(length=10), table=<employees>, nullable=False), Column('email', VARCHAR(length=100), table=<employees>, nullable=False), Column('officeCode', VARCHAR(length=10), ForeignKey('mysqlsrc.offices.officeCode'), table=<employees>, nullable=False), Column('reportsTo', INTEGER(display_width=11), ForeignKey('mysqlsrc.employees.employeeNumber'), table=<employees>), Column('jobTitle', VARCHAR(length=50), table=<employees>, nullable=False), schema='mysqlsrc')), PrimaryKeyConstraint(Column('employeeNumber', INTEGER(display_width=11), table=<employees>, primary_key=True, nullable=False))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac21e20>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac21eb0>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac1b1c0>",
                "foreign_keys":"{ForeignKey('mysqlsrc.offices.officeCode'), ForeignKey('mysqlsrc.employees.employeeNumber')}",
                "fullname":"mysqlsrc.employees",
                "implicit_returning":true,
                "indexes":"{Index('officeCode', Column('officeCode', VARCHAR(length=10), ForeignKey('mysqlsrc.offices.officeCode'), table=<employees>, nullable=False)), Index('reportsTo', Column('reportsTo', INTEGER(display_width=11), ForeignKey('mysqlsrc.employees.employeeNumber'), table=<employees>))}",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"employees",
                "primary_key":"PrimaryKeyConstraint(Column('employeeNumber', INTEGER(display_width=11), table=<employees>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "items":{
            "Name":"items",
            "Type":"table",
            "PrimaryKeys":[
                "id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"id",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"True"
                },
                {
                    "name":"item_no",
                    "type":"VARCHAR(255)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(items.id, items.item_no)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(items.id, items.item_no)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('id', INTEGER(display_width=11), table=<items>, primary_key=True, nullable=False))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac2e5e0>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac2e640>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac25ec0>",
                "foreign_keys":"set()",
                "fullname":"mysqlsrc.items",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"items",
                "primary_key":"PrimaryKeyConstraint(Column('id', INTEGER(display_width=11), table=<items>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "offices":{
            "Name":"offices",
            "Type":"table",
            "PrimaryKeys":[
                "officeCode"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"officeCode",
                    "type":"VARCHAR(10)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"city",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"phone",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"addressLine1",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"addressLine2",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"state",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"country",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"postalCode",
                    "type":"VARCHAR(15)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"territory",
                    "type":"VARCHAR(10)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(offices.officeCode, offices.city, offices.phone, offices.addressLine1, offices.addressLine2, offices.state, offices.country, offices.postalCode, offices.territory)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(offices.officeCode, offices.city, offices.phone, offices.addressLine1, offices.addressLine2, offices.state, offices.country, offices.postalCode, offices.territory)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('officeCode', VARCHAR(length=10), table=<offices>, primary_key=True, nullable=False))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac21760>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac217f0>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac1b8c0>",
                "foreign_keys":"set()",
                "fullname":"mysqlsrc.offices",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"offices",
                "primary_key":"PrimaryKeyConstraint(Column('officeCode', VARCHAR(length=10), table=<offices>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "orderdetails":{
            "Name":"orderdetails",
            "Type":"table",
            "PrimaryKeys":[
                "orderNumber",
                "productCode"
            ],
            "Indexes":[
                {
                    "name":"productCode",
                    "column_names":[
                        "productCode"
                    ],
                    "unique":false
                }
            ],
            "Columns":[
                {
                    "name":"orderNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                },
                {
                    "name":"productCode",
                    "type":"VARCHAR(15)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"quantityOrdered",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                },
                {
                    "name":"priceEach",
                    "type":"DECIMAL(10, 2)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"orderLineNumber",
                    "type":"SMALLINT",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(orderdetails.orderNumber, orderdetails.productCode, orderdetails.quantityOrdered, orderdetails.priceEach, orderdetails.orderLineNumber)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(orderdetails.orderNumber, orderdetails.productCode, orderdetails.quantityOrdered, orderdetails.priceEach, orderdetails.orderLineNumber)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('orderNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.orders.orderNumber'), table=<orderdetails>, primary_key=True, nullable=False), Column('productCode', VARCHAR(length=15), ForeignKey('mysqlsrc.products.productCode'), table=<orderdetails>, primary_key=True, nullable=False)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac2d6d0>, None, name='orderdetails_ibfk_1', link_to_name=True, table=Table('orderdetails', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('orderNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.orders.orderNumber'), table=<orderdetails>, primary_key=True, nullable=False), Column('productCode', VARCHAR(length=15), ForeignKey('mysqlsrc.products.productCode'), table=<orderdetails>, primary_key=True, nullable=False), Column('quantityOrdered', INTEGER(display_width=11), table=<orderdetails>, nullable=False), Column('priceEach', DECIMAL(precision=10, scale=2), table=<orderdetails>, nullable=False), Column('orderLineNumber', SMALLINT(display_width=6), table=<orderdetails>, nullable=False), schema='mysqlsrc')), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac2dae0>, None, name='orderdetails_ibfk_2', link_to_name=True, table=Table('orderdetails', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('orderNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.orders.orderNumber'), table=<orderdetails>, primary_key=True, nullable=False), Column('productCode', VARCHAR(length=15), ForeignKey('mysqlsrc.products.productCode'), table=<orderdetails>, primary_key=True, nullable=False), Column('quantityOrdered', INTEGER(display_width=11), table=<orderdetails>, nullable=False), Column('priceEach', DECIMAL(precision=10, scale=2), table=<orderdetails>, nullable=False), Column('orderLineNumber', SMALLINT(display_width=6), table=<orderdetails>, nullable=False), schema='mysqlsrc'))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac45c40>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac45cd0>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac332c0>",
                "foreign_keys":"{ForeignKey('mysqlsrc.products.productCode'), ForeignKey('mysqlsrc.orders.orderNumber')}",
                "fullname":"mysqlsrc.orderdetails",
                "implicit_returning":true,
                "indexes":"{Index('productCode', Column('productCode', VARCHAR(length=15), ForeignKey('mysqlsrc.products.productCode'), table=<orderdetails>, primary_key=True, nullable=False))}",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"orderdetails",
                "primary_key":"PrimaryKeyConstraint(Column('orderNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.orders.orderNumber'), table=<orderdetails>, primary_key=True, nullable=False), Column('productCode', VARCHAR(length=15), ForeignKey('mysqlsrc.products.productCode'), table=<orderdetails>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "orders":{
            "Name":"orders",
            "Type":"table",
            "PrimaryKeys":[
                "orderNumber"
            ],
            "Indexes":[
                {
                    "name":"customerNumber",
                    "column_names":[
                        "customerNumber"
                    ],
                    "unique":false
                }
            ],
            "Columns":[
                {
                    "name":"orderNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                },
                {
                    "name":"orderDate",
                    "type":"DATE",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"requiredDate",
                    "type":"DATE",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"shippedDate",
                    "type":"DATE",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"status",
                    "type":"VARCHAR(15)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"comments",
                    "type":"TEXT",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"customerNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(orders.orderNumber, orders.orderDate, orders.requiredDate, orders.shippedDate, orders.status, orders.comments, orders.customerNumber)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(orders.orderNumber, orders.orderDate, orders.requiredDate, orders.shippedDate, orders.status, orders.comments, orders.customerNumber)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('orderNumber', INTEGER(display_width=11), table=<orders>, primary_key=True, nullable=False)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac2d770>, None, name='orders_ibfk_1', link_to_name=True, table=Table('orders', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('orderNumber', INTEGER(display_width=11), table=<orders>, primary_key=True, nullable=False), Column('orderDate', DATE(), table=<orders>, nullable=False), Column('requiredDate', DATE(), table=<orders>, nullable=False), Column('shippedDate', DATE(), table=<orders>), Column('status', VARCHAR(length=15), table=<orders>, nullable=False), Column('comments', TEXT(), table=<orders>), Column('customerNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.customers.customerNumber'), table=<orders>, nullable=False), schema='mysqlsrc'))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac39250>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac392e0>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac334c0>",
                "foreign_keys":"{ForeignKey('mysqlsrc.customers.customerNumber')}",
                "fullname":"mysqlsrc.orders",
                "implicit_returning":true,
                "indexes":"{Index('customerNumber', Column('customerNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.customers.customerNumber'), table=<orders>, nullable=False))}",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"orders",
                "primary_key":"PrimaryKeyConstraint(Column('orderNumber', INTEGER(display_width=11), table=<orders>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "payments":{
            "Name":"payments",
            "Type":"table",
            "PrimaryKeys":[
                "customerNumber",
                "checkNumber"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"customerNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False",
                    "autoincrement":"False"
                },
                {
                    "name":"checkNumber",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"paymentDate",
                    "type":"DATE",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"amount",
                    "type":"DECIMAL(10, 2)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(payments.customerNumber, payments.checkNumber, payments.paymentDate, payments.amount)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(payments.customerNumber, payments.checkNumber, payments.paymentDate, payments.amount)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('customerNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.customers.customerNumber'), table=<payments>, primary_key=True, nullable=False), Column('checkNumber', VARCHAR(length=50), table=<payments>, primary_key=True, nullable=False)), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac445e0>, None, name='payments_ibfk_1', link_to_name=True, table=Table('payments', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('customerNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.customers.customerNumber'), table=<payments>, primary_key=True, nullable=False), Column('checkNumber', VARCHAR(length=50), table=<payments>, primary_key=True, nullable=False), Column('paymentDate', DATE(), table=<payments>, nullable=False), Column('amount', DECIMAL(precision=10, scale=2), table=<payments>, nullable=False), schema='mysqlsrc'))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac503d0>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac50430>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac47ac0>",
                "foreign_keys":"{ForeignKey('mysqlsrc.customers.customerNumber')}",
                "fullname":"mysqlsrc.payments",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"payments",
                "primary_key":"PrimaryKeyConstraint(Column('customerNumber', INTEGER(display_width=11), ForeignKey('mysqlsrc.customers.customerNumber'), table=<payments>, primary_key=True, nullable=False), Column('checkNumber', VARCHAR(length=50), table=<payments>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "productlines":{
            "Name":"productlines",
            "Type":"table",
            "PrimaryKeys":[
                "productLine"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"productLine",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"textDescription",
                    "type":"VARCHAR(4000)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"htmlDescription",
                    "type":"MEDIUMTEXT",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"image",
                    "type":"MEDIUMBLOB",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(productlines.productLine, productlines.textDescription, productlines.htmlDescription, productlines.image)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(productlines.productLine, productlines.textDescription, productlines.htmlDescription, productlines.image)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('productLine', VARCHAR(length=50), table=<productlines>, primary_key=True, nullable=False))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac39f10>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac39f70>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac3c640>",
                "foreign_keys":"set()",
                "fullname":"mysqlsrc.productlines",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"productlines",
                "primary_key":"PrimaryKeyConstraint(Column('productLine', VARCHAR(length=50), table=<productlines>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "products":{
            "Name":"products",
            "Type":"table",
            "PrimaryKeys":[
                "productCode"
            ],
            "Indexes":[
                {
                    "name":"productLine",
                    "column_names":[
                        "productLine"
                    ],
                    "unique":false
                }
            ],
            "Columns":[
                {
                    "name":"productCode",
                    "type":"VARCHAR(15)",
                    "default":"''",
                    "comment":"产品代码",
                    "nullable":"False"
                },
                {
                    "name":"productName",
                    "type":"VARCHAR(70)",
                    "default":"None",
                    "comment":"产品名称",
                    "nullable":"False"
                },
                {
                    "name":"productLine",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"产品线",
                    "nullable":"False"
                },
                {
                    "name":"productScale",
                    "type":"VARCHAR(10)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"productVendor",
                    "type":"VARCHAR(50)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"productDescription",
                    "type":"TEXT",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"quantityInStock",
                    "type":"SMALLINT",
                    "default":"None",
                    "comment":"库存",
                    "nullable":"False",
                    "autoincrement":"False"
                },
                {
                    "name":"buyPrice",
                    "type":"DECIMAL(10, 2)",
                    "default":"None",
                    "comment":"价格",
                    "nullable":"False"
                },
                {
                    "name":"MSRP",
                    "type":"DECIMAL(10, 2)",
                    "default":"None",
                    "comment":"建议零售价",
                    "nullable":"False"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(products.productCode, products.productName, products.productLine, products.productScale, products.productVendor, products.productDescription, products.quantityInStock, products.buyPrice, products.MSRP)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(products.productCode, products.productName, products.productLine, products.productScale, products.productVendor, products.productDescription, products.quantityInStock, products.buyPrice, products.MSRP)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('productCode', VARCHAR(length=15), table=<products>, primary_key=True, nullable=False, server_default=DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x11ac39700>, for_update=False), comment='产品代码')), ForeignKeyConstraint(<sqlalchemy.sql.base.DedupeColumnCollection object at 0x11ac2dea0>, None, name='products_ibfk_1', link_to_name=True, table=Table('products', MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc)), Column('productCode', VARCHAR(length=15), table=<products>, primary_key=True, nullable=False, server_default=DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x11ac39700>, for_update=False), comment='产品代码'), Column('productName', VARCHAR(length=70), table=<products>, nullable=False, comment='产品名称'), Column('productLine', VARCHAR(length=50), ForeignKey('mysqlsrc.productlines.productLine'), table=<products>, nullable=False, comment='产品线'), Column('productScale', VARCHAR(length=10), table=<products>, nullable=False), Column('productVendor', VARCHAR(length=50), table=<products>, nullable=False), Column('productDescription', TEXT(), table=<products>, nullable=False), Column('quantityInStock', SMALLINT(display_width=6), table=<products>, nullable=False, comment='库存'), Column('buyPrice', DECIMAL(precision=10, scale=2), table=<products>, nullable=False, comment='价格'), Column('MSRP', DECIMAL(precision=10, scale=2), table=<products>, nullable=False, comment='建议零售价'), schema='mysqlsrc'))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac456a0>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac45730>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac3c1c0>",
                "foreign_keys":"{ForeignKey('mysqlsrc.productlines.productLine')}",
                "fullname":"mysqlsrc.products",
                "implicit_returning":true,
                "indexes":"{Index('productLine', Column('productLine', VARCHAR(length=50), ForeignKey('mysqlsrc.productlines.productLine'), table=<products>, nullable=False, comment='产品线'))}",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"products",
                "primary_key":"PrimaryKeyConstraint(Column('productCode', VARCHAR(length=15), table=<products>, primary_key=True, nullable=False, server_default=DefaultClause(<sqlalchemy.sql.elements.TextClause object at 0x11ac39700>, for_update=False), comment='产品代码'))",
                "schema":"mysqlsrc"
            }
        },
        "tokens":{
            "Name":"tokens",
            "Type":"table",
            "PrimaryKeys":[],
            "Indexes":[],
            "Columns":[
                {
                    "name":"s",
                    "type":"VARCHAR(6)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(tokens.s)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(tokens.s)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint()}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac506a0>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac50700>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac521c0>",
                "foreign_keys":"set()",
                "fullname":"mysqlsrc.tokens",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"tokens",
                "primary_key":"PrimaryKeyConstraint()",
                "schema":"mysqlsrc"
            }
        },
        "zinopara":{
            "Name":"zinopara",
            "Type":"table",
            "PrimaryKeys":[
                "id"
            ],
            "Indexes":[],
            "Columns":[
                {
                    "name":"id",
                    "type":"VARCHAR(255) COLLATE \"utf8mb4_unicode_ci\"",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"type",
                    "type":"VARCHAR(255) COLLATE \"utf8mb4_unicode_ci\"",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"creatorid",
                    "type":"VARCHAR(255) COLLATE \"utf8mb4_unicode_ci\"",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"json",
                    "type":"TEXT COLLATE \"utf8mb4_unicode_ci\"",
                    "default":"None",
                    "comment":"None",
                    "nullable":"False"
                },
                {
                    "name":"json_updates",
                    "type":"TEXT COLLATE \"utf8mb4_unicode_ci\"",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(zinopara.id, zinopara.type, zinopara.creatorid, zinopara.json, zinopara.json_updates)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(zinopara.id, zinopara.type, zinopara.creatorid, zinopara.json, zinopara.json_updates)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint(Column('id', VARCHAR(collation='utf8mb4_unicode_ci', length=255), table=<zinopara>, primary_key=True, nullable=False))}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac50c70>",
                "dialect_options":{
                    "mysql":"<sqlalchemy.sql.base._DialectArgDict object at 0x11ac50cd0>"
                },
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac52440>",
                "foreign_keys":"set()",
                "fullname":"mysqlsrc.zinopara",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"zinopara",
                "primary_key":"PrimaryKeyConstraint(Column('id', VARCHAR(collation='utf8mb4_unicode_ci', length=255), table=<zinopara>, primary_key=True, nullable=False))",
                "schema":"mysqlsrc"
            }
        },
        "order_view":{
            "Name":"order_view",
            "Type":"view",
            "PrimaryKeys":[],
            "Indexes":[],
            "Columns":[
                {
                    "name":"orderNumber",
                    "type":"INTEGER",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True",
                    "autoincrement":"False"
                },
                {
                    "name":"orderDate",
                    "type":"DATE",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"requiredDate",
                    "type":"DATE",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"shippedDate",
                    "type":"DATE",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                },
                {
                    "name":"productCode",
                    "type":"VARCHAR(15)",
                    "default":"None",
                    "comment":"None",
                    "nullable":"True"
                }
            ],
            "Dict":{
                "_columns":"DedupeColumnCollection(order_view.orderNumber, order_view.orderDate, order_view.requiredDate, order_view.shippedDate, order_view.productCode)",
                "_extra_dependencies":"set()",
                "_prefixes":[],
                "columns":"ImmutableColumnCollection(order_view.orderNumber, order_view.orderDate, order_view.requiredDate, order_view.shippedDate, order_view.productCode)",
                "comment":null,
                "constraints":"{PrimaryKeyConstraint()}",
                "dialect_kwargs":"<sqlalchemy.sql.base._DialectArgView object at 0x11ac5c2b0>",
                "dialect_options":{},
                "dispatch":"<sqlalchemy.event.base.DDLEventsDispatch object at 0x11ac52ac0>",
                "foreign_keys":"set()",
                "fullname":"mysqlsrc.order_view",
                "implicit_returning":true,
                "indexes":"set()",
                "metadata":"MetaData(bind=Engine(mysql+pymysql://root:***@192.168.50.10:3306/mysqlsrc))",
                "name":"order_view",
                "primary_key":"PrimaryKeyConstraint()",
                "schema":"mysqlsrc"
            }
        }
    }
}